{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gambl\\\\Thinkful\\\\qualified-assignments\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\EditDeck.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useHistory, useParams } from \"react-router-dom\";\nimport { readDeck, updateDeck } from \"./../utils/api/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditDeck = () => {\n  _s();\n\n  let history = useHistory();\n  const {\n    deckId\n  } = useParams();\n  const [deck, setDeck] = useState([]);\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  useEffect(() => {\n    readDeck(deckId).then(setDeck);\n  }, [deckId]);\n  useEffect(() => {\n    setTitle(title);\n    setDescription(description);\n  }, [description, title]);\n\n  function goToDeck() {\n    history.push(`/decks/${deckId}`);\n  }\n\n  async function updateDeckHandler() {\n    await updateDeck({\n      name: title,\n      description: description,\n      id: deck.id\n    });\n    goToDeck();\n  }\n\n  function titleChangeHandler(event) {\n    const newTitle = event.target.value;\n    setTitle(newTitle);\n  }\n\n  function descriptionChangeHandler(event) {\n    const newDescription = event.target.value;\n    setDescription(newDescription);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      \"aria-label\": \"breadcrumb\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        className: \"breadcrumb\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"breadcrumb-item\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/\",\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"breadcrumb-item\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: `/decks/${deckId}`,\n            children: deck.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"breadcrumb-item active\",\n          \"aria-current\": \"page\",\n          children: \"Edit Deck\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Edit Deck\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"exampleFormControlInput1\",\n          defaultValue: deck.name,\n          onChange: titleChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control\",\n          id: \"exampleFormControlTextarea1\",\n          rows: \"3\",\n          defaultValue: deck.description,\n          onChange: descriptionChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-secondary\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: updateDeckHandler,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditDeck, \"62GZLZQzuJIIgbbS3mIuFgx1/XI=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = EditDeck;\nexport default EditDeck;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditDeck\");","map":{"version":3,"sources":["C:/Users/gambl/Thinkful/qualified-assignments/Project_Flashcards_Qualified_1/src/Layout/EditDeck.js"],"names":["React","useState","useEffect","Link","useHistory","useParams","readDeck","updateDeck","EditDeck","history","deckId","deck","setDeck","title","setTitle","description","setDescription","then","goToDeck","push","updateDeckHandler","name","id","titleChangeHandler","event","newTitle","target","value","descriptionChangeHandler","newDescription"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport { readDeck, updateDeck } from \"./../utils/api/index\";\r\n\r\nconst EditDeck = () => {\r\n  let history = useHistory();\r\n  const { deckId } = useParams();\r\n  const [deck, setDeck] = useState([]);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    readDeck(deckId).then(setDeck);\r\n  }, [deckId]);\r\n\r\n  useEffect(() => {\r\n    setTitle(title);\r\n    setDescription(description);\r\n  }, [description, title]);\r\n\r\n  function goToDeck() {\r\n    history.push(`/decks/${deckId}`);\r\n  }\r\n  async function updateDeckHandler() {\r\n    await updateDeck({ name: title, description: description, id: deck.id });\r\n    goToDeck();\r\n  }\r\n\r\n  function titleChangeHandler(event) {\r\n    const newTitle = event.target.value;\r\n    setTitle(newTitle);\r\n  }\r\n  function descriptionChangeHandler(event) {\r\n    const newDescription = event.target.value;\r\n    setDescription(newDescription);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <nav aria-label=\"breadcrumb\">\r\n        <ol className=\"breadcrumb\">\r\n          <li className=\"breadcrumb-item\">\r\n            <a href=\"/\">Home</a>\r\n          </li>\r\n          <li className=\"breadcrumb-item\">\r\n            <a href={`/decks/${deckId}`}>{deck.name}</a>\r\n          </li>\r\n          <li className=\"breadcrumb-item active\" aria-current=\"page\">\r\n            Edit Deck\r\n          </li>\r\n        </ol>\r\n      </nav>\r\n      <h3>Edit Deck</h3>\r\n      <br />\r\n      <br />\r\n      <form>\r\n        <div className=\"form-group\">\r\n          <label></label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"exampleFormControlInput1\"\r\n            defaultValue={deck.name}\r\n            onChange={titleChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label></label>\r\n          <textarea\r\n            className=\"form-control\"\r\n            id=\"exampleFormControlTextarea1\"\r\n            rows=\"3\"\r\n            defaultValue={deck.description}\r\n            onChange={descriptionChangeHandler}\r\n          ></textarea>\r\n        </div>\r\n      </form>\r\n      <Link to=\"/\">\r\n        <button className=\"btn btn-secondary\">Cancel</button>{\" \"}\r\n      </Link>\r\n      <button className=\"btn btn-primary\" onClick={updateDeckHandler}>\r\n        Submit\r\n      </button>{\" \"}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditDeck;\r\n"]},"metadata":{},"sourceType":"module"}