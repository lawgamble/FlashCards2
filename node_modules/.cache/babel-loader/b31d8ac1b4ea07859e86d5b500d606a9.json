{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gambl\\\\Thinkful\\\\qualified-assignments\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\Study.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { readDeck, listCards } from \"./../utils/api\";\nimport { useParams } from \"react-router-dom\";\nimport StudyCard from \"./StudyCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Study = () => {\n  _s();\n\n  const [studyDisplay, setStudyDisplay] = useState({});\n  const [deckCards, setDeckCards] = useState([]);\n  const {\n    deckId\n  } = useParams();\n  const [changeVariable, setChangeVariable] = useState(false);\n  useEffect(() => {\n    async function callDeck() {\n      readDeck(deckId).then(setStudyDisplay);\n      setChangeVariable(true);\n      await callCards();\n    }\n\n    callDeck();\n  }, [deckId]);\n\n  async function callCards() {\n    if (changeVariable === true) {\n      await listCards(deckId).then(setDeckCards);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      \"aria-label\": \"breadcrumb\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        className: \"breadcrumb\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"breadcrumb-item\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/\",\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"breadcrumb-item\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: `/decks/${deckId}/`,\n            children: studyDisplay === null || studyDisplay === void 0 ? void 0 : studyDisplay.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"breadcrumb-item active\",\n          \"aria-current\": \"page\",\n          children: \"Study\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Study: \", studyDisplay.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StudyCard, {\n      deckCards: deckCards,\n      studyDisplay: studyDisplay,\n      deckId: deckId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Study, \"aewDzfRhuwQby9i2mKqv/gHGyaE=\", false, function () {\n  return [useParams];\n});\n\n_c = Study;\nexport default Study;\n\nvar _c;\n\n$RefreshReg$(_c, \"Study\");","map":{"version":3,"sources":["C:/Users/gambl/Thinkful/qualified-assignments/Project_Flashcards_Qualified_1/src/Layout/Study.js"],"names":["React","useEffect","useState","readDeck","listCards","useParams","StudyCard","Study","studyDisplay","setStudyDisplay","deckCards","setDeckCards","deckId","changeVariable","setChangeVariable","callDeck","then","callCards","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,gBAApC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM;AAAEU,IAAAA;AAAF,MAAaP,SAAS,EAA5B;AACA,QAAM,CAACQ,cAAD,EAAiBC,iBAAjB,IAAsCZ,QAAQ,CAAC,KAAD,CAApD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAec,QAAf,GAA0B;AACxBZ,MAAAA,QAAQ,CAACS,MAAD,CAAR,CAAiBI,IAAjB,CAAsBP,eAAtB;AACAK,MAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACA,YAAMG,SAAS,EAAf;AACD;;AACDF,IAAAA,QAAQ;AACT,GAPQ,EAON,CAACH,MAAD,CAPM,CAAT;;AASA,iBAAeK,SAAf,GAA2B;AACzB,QAAIJ,cAAc,KAAK,IAAvB,EAA6B;AAC3B,YAAMT,SAAS,CAACQ,MAAD,CAAT,CAAkBI,IAAlB,CAAuBL,YAAvB,CAAN;AACD;AACF;;AAED,sBACE;AAAA,4BACE;AAAK,oBAAW,YAAhB;AAAA,6BACE;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,iBAAd;AAAA,iCACE;AAAG,YAAA,IAAI,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAI,UAAA,SAAS,EAAC,iBAAd;AAAA,iCACE;AAAG,YAAA,IAAI,EAAG,UAASC,MAAO,GAA1B;AAAA,sBAA+BJ,YAA/B,aAA+BA,YAA/B,uBAA+BA,YAAY,CAAEU;AAA7C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAJF,eAOE;AAAI,UAAA,SAAS,EAAC,wBAAd;AAAuC,0BAAa,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAcE;AAAA;AAAA;AAAA;AAAA,YAdF,eAeE;AAAA,4BAAYV,YAAY,CAACU,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,YAfF,eAgBE;AAAA;AAAA;AAAA;AAAA,YAhBF,eAiBE,QAAC,SAAD;AACE,MAAA,SAAS,EAAER,SADb;AAEE,MAAA,YAAY,EAAEF,YAFhB;AAGE,MAAA,MAAM,EAAEI;AAHV;AAAA;AAAA;AAAA;AAAA,YAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD,CA9CD;;GAAML,K;UAGeF,S;;;KAHfE,K;AAgDN,eAAeA,KAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { readDeck, listCards } from \"./../utils/api\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport StudyCard from \"./StudyCard\";\r\n\r\nconst Study = () => {\r\n  const [studyDisplay, setStudyDisplay] = useState({});\r\n  const [deckCards, setDeckCards] = useState([]);\r\n  const { deckId } = useParams();\r\n  const [changeVariable, setChangeVariable] = useState(false);\r\n\r\n  useEffect(() => {\r\n    async function callDeck() {\r\n      readDeck(deckId).then(setStudyDisplay);\r\n      setChangeVariable(true);\r\n      await callCards();\r\n    }\r\n    callDeck();\r\n  }, [deckId]);\r\n\r\n  async function callCards() {\r\n    if (changeVariable === true) {\r\n      await listCards(deckId).then(setDeckCards);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <nav aria-label=\"breadcrumb\">\r\n        <ol className=\"breadcrumb\">\r\n          <li className=\"breadcrumb-item\">\r\n            <a href=\"/\">Home</a>\r\n          </li>\r\n          <li className=\"breadcrumb-item\">\r\n            <a href={`/decks/${deckId}/`}>{studyDisplay?.name}</a>\r\n          </li>\r\n          <li className=\"breadcrumb-item active\" aria-current=\"page\">\r\n            Study\r\n          </li>\r\n        </ol>\r\n      </nav>\r\n      <br />\r\n      <h2>Study: {studyDisplay.name}</h2>\r\n      <br />\r\n      <StudyCard\r\n        deckCards={deckCards}\r\n        studyDisplay={studyDisplay}\r\n        deckId={deckId}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Study;\r\n"]},"metadata":{},"sourceType":"module"}