{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gambl\\\\Thinkful\\\\qualified-assignments\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\DeckDisplay.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport { listDecks } from \"./../utils/api/index\";\nimport { deleteDeck } from \"./../utils/api/index\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DeckDisplay = ({\n  decks,\n  setDecks\n}) => {\n  _s();\n\n  // state use the then of the promise to set state\n  // tie state to a prop of the component to auto rerender when state changes.\n\n  /*\r\n    let [s, setS] = useState([]);\r\n    useEffect(() => {\r\n      listDecks().then(setS);\r\n    },[]);\r\n   */\n  // function(){}\n  // async function(){}\n  // ()=>{}\n  // async ()=>{}\n  useEffect(() => {\n    listDecks().then(setDecks);\n  }, [setDecks]);\n\n  async function deleteHandler(id) {\n    const deleteAlert = window.confirm(\"You will not be able to recover the deck!\");\n\n    if (deleteAlert) {\n      deleteDeck(id);\n      window.location.reload();\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: decks.map((deck, index) => /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        width: \"50rem\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: deck.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: deck.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `decks/${deck.id}`,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            children: \"View\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `decks/${deck.id}/study`,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            children: \"Study\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"danger\",\n          onClick: () => deleteHandler(deck.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DeckDisplay, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = DeckDisplay;\nexport default DeckDisplay;\n\n/*#__PURE__*/\n_jsxDEV(\"div\", {\n  class: \"card\",\n  style: {\n    width: \"50rem\"\n  },\n  children: /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"card-body\",\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      class: \"card-title\",\n      children: deck.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      class: \"card-text\",\n      children: deck.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: `decks/${deck.id}`,\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        class: \"btn btn-primary\",\n        children: \"Study\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      class: \"btn btn-danger\",\n      onClick: () => deleteHandler(deck.id),\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }, this), \"Go somewhere\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 3\n  }, this)\n}, index, false, {\n  fileName: _jsxFileName,\n  lineNumber: 62,\n  columnNumber: 1\n}, this);\n\nvar _c;\n\n$RefreshReg$(_c, \"DeckDisplay\");","map":{"version":3,"sources":["C:/Users/gambl/Thinkful/qualified-assignments/Project_Flashcards_Qualified_1/src/Layout/DeckDisplay.js"],"names":["React","useEffect","Card","Button","listDecks","deleteDeck","Link","DeckDisplay","decks","setDecks","then","deleteHandler","id","deleteAlert","window","confirm","location","reload","map","deck","index","width","name","description"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { listDecks } from \"./../utils/api/index\";\r\nimport { deleteDeck } from \"./../utils/api/index\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst DeckDisplay = ({ decks, setDecks }) => {\r\n  // state use the then of the promise to set state\r\n  // tie state to a prop of the component to auto rerender when state changes.\r\n  /*\r\n    let [s, setS] = useState([]);\r\n    useEffect(() => {\r\n      listDecks().then(setS);\r\n    },[]);\r\n   */\r\n\r\n  // function(){}\r\n  // async function(){}\r\n  // ()=>{}\r\n  // async ()=>{}\r\n\r\n  useEffect(() => {\r\n    listDecks().then(setDecks);\r\n  }, [setDecks]);\r\n\r\n  async function deleteHandler(id) {\r\n    const deleteAlert = window.confirm(\r\n      \"You will not be able to recover the deck!\"\r\n    );\r\n    if (deleteAlert) {\r\n      deleteDeck(id);\r\n      window.location.reload();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {decks.map((deck, index) => (\r\n        <Card key={index} style={{ width: \"50rem\" }}>\r\n          <Card.Body>\r\n            <Card.Title>{deck.name}</Card.Title>\r\n            <Card.Text>{deck.description}</Card.Text>\r\n            <Link to={`decks/${deck.id}`}>\r\n              <Button variant=\"secondary\">View</Button>{\" \"}\r\n            </Link>\r\n            <Link to={`decks/${deck.id}/study`}>\r\n              <Button variant=\"primary\">Study</Button>{\" \"}\r\n            </Link>\r\n            <Button variant=\"danger\" onClick={() => deleteHandler(deck.id)}>\r\n              Delete\r\n            </Button>\r\n          </Card.Body>\r\n        </Card>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeckDisplay;\r\n\r\n<div class=\"card\" key={index} style={{ width: \"50rem\" }}>\r\n  <div class=\"card-body\">\r\n    <h5 class=\"card-title\">{deck.name}</h5>\r\n    <p class=\"card-text\">{deck.description}</p>\r\n    <Link to={`decks/${deck.id}`}>\r\n      <a class=\"btn btn-primary\">Study</a>{\" \"}\r\n    </Link>\r\n    <button\r\n      type=\"button\"\r\n      class=\"btn btn-danger\"\r\n      onClick={() => deleteHandler(deck.id)}\r\n    >\r\n      Delete\r\n    </button>\r\n    Go somewhere\r\n  </div>\r\n</div>;\r\n"]},"metadata":{},"sourceType":"module"}