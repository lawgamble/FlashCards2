{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gambl\\\\Thinkful\\\\qualified-assignments\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\CreateCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { readDeck } from \"../utils/api/index\";\nimport { createCard } from \"../utils/api/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreateEditCard = () => {\n  _s();\n\n  let history = useHistory();\n  const [deck, setDeck] = useState([]);\n  const {\n    deckId\n  } = useParams();\n  const [cardFront, setCardFront] = useState(\"\");\n  const [cardBack, setCardBack] = useState(\"\");\n  const newCard = {\n    front: cardFront,\n    back: cardBack\n  };\n  useEffect(() => {\n    readDeck(deckId).then(setDeck);\n  }, [deckId]);\n\n  function goToDeck() {\n    history.push(`/decks/${deckId}`);\n  }\n\n  const frontSideChangeHandler = event => {\n    setCardFront(event.target.value);\n  };\n\n  const backSideChangeHandler = event => {\n    setCardBack(event.target.value);\n  };\n\n  async function saveCardHandler() {\n    await createCard(deckId, newCard);\n    goToDeck();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      \"aria-label\": \"breadcrumb\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        class: \"breadcrumb\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          class: \"breadcrumb-item\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/\",\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          class: \"breadcrumb-item\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: `/decks/${deckId}/`,\n            children: deck.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          class: \"breadcrumb-item active\",\n          \"aria-current\": \"page\",\n          children: \"Add Card\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [deck.name, \": Create Card Form\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"exampleFormControlTextarea1\",\n          children: \"Front:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          class: \"form-control\",\n          id: \"exampleFormControlTextarea1\",\n          rows: \"3\",\n          type: \"text\",\n          placeholder: \"Front Side of Card\",\n          onChange: frontSideChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"exampleFormControlTextarea1\",\n          children: \"Example textarea\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          class: \"form-control\",\n          id: \"exampleFormControlTextarea1\",\n          rows: \"3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      class: \"btn btn-primary\",\n      href: `/decks/${deckId}`,\n      role: \"button\",\n      children: \"Done\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      class: \"btn btn-success\",\n      onClick: saveCardHandler,\n      children: \"Save Card\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CreateEditCard, \"L3AvSdbCyaiZIEHfxOSQqrPsdxw=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = CreateEditCard;\nexport default CreateEditCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateEditCard\");","map":{"version":3,"sources":["C:/Users/gambl/Thinkful/qualified-assignments/Project_Flashcards_Qualified_1/src/Layout/CreateCard.js"],"names":["React","useState","useEffect","Form","useParams","useHistory","readDeck","createCard","CreateEditCard","history","deck","setDeck","deckId","cardFront","setCardFront","cardBack","setCardBack","newCard","front","back","then","goToDeck","push","frontSideChangeHandler","event","target","value","backSideChangeHandler","saveCardHandler","name"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { readDeck } from \"../utils/api/index\";\r\nimport { createCard } from \"../utils/api/index\";\r\n\r\nconst CreateEditCard = () => {\r\n  let history = useHistory();\r\n  const [deck, setDeck] = useState([]);\r\n  const { deckId } = useParams();\r\n  const [cardFront, setCardFront] = useState(\"\");\r\n  const [cardBack, setCardBack] = useState(\"\");\r\n  const newCard = { front: cardFront, back: cardBack };\r\n\r\n  useEffect(() => {\r\n    readDeck(deckId).then(setDeck);\r\n  }, [deckId]);\r\n\r\n  function goToDeck() {\r\n    history.push(`/decks/${deckId}`);\r\n  }\r\n  const frontSideChangeHandler = (event) => {\r\n    setCardFront(event.target.value);\r\n  };\r\n  const backSideChangeHandler = (event) => {\r\n    setCardBack(event.target.value);\r\n  };\r\n\r\n  async function saveCardHandler() {\r\n    await createCard(deckId, newCard);\r\n    goToDeck();\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <nav aria-label=\"breadcrumb\">\r\n        <ol class=\"breadcrumb\">\r\n          <li class=\"breadcrumb-item\">\r\n            <a href=\"/\">Home</a>\r\n          </li>\r\n          <li class=\"breadcrumb-item\">\r\n            <a href={`/decks/${deckId}/`}>{deck.name}</a>\r\n          </li>\r\n          <li class=\"breadcrumb-item active\" aria-current=\"page\">\r\n            Add Card\r\n          </li>\r\n        </ol>\r\n      </nav>\r\n      <br />\r\n      <h2>{deck.name}: Create Card Form</h2>\r\n      <br />\r\n      <form>\r\n        <div class=\"form-group\">\r\n          <label for=\"exampleFormControlTextarea1\">Front:</label>\r\n          <textarea\r\n            class=\"form-control\"\r\n            id=\"exampleFormControlTextarea1\"\r\n            rows=\"3\"\r\n            type=\"text\"\r\n            placeholder=\"Front Side of Card\"\r\n            onChange={frontSideChangeHandler}\r\n          ></textarea>\r\n          <br />\r\n          <label for=\"exampleFormControlTextarea1\">Example textarea</label>\r\n          <textarea\r\n            class=\"form-control\"\r\n            id=\"exampleFormControlTextarea1\"\r\n            rows=\"3\"\r\n          ></textarea>\r\n        </div>\r\n      </form>\r\n      {/* <Form>\r\n        <Form.Group>\r\n          <Form.Label>Front:</Form.Label>\r\n          <Form.Control\r\n            as=\"textarea\"\r\n            rows={3}\r\n            size=\"lg\"\r\n            type=\"text\"\r\n            placeholder=\"Front Side of Card\"\r\n            onChange={frontSideChangeHandler}\r\n          />\r\n          <br />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n          <Form.Label>Back:</Form.Label>\r\n          <Form.Control\r\n            as=\"textarea\"\r\n            rows={3}\r\n            size=\"lg\"\r\n            placeholder=\"Back Side of Card\"\r\n            onChange={backSideChangeHandler}\r\n          />\r\n        </Form.Group>\r\n      </Form> */}\r\n      <a class=\"btn btn-primary\" href={`/decks/${deckId}`} role=\"button\">\r\n        Done\r\n      </a>{\" \"}\r\n      <button type=\"button\" class=\"btn btn-success\" onClick={saveCardHandler}>\r\n        Save Card\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateEditCard;\r\n"]},"metadata":{},"sourceType":"module"}