{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gambl\\\\Thinkful\\\\qualified-assignments\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\DeckDisplay.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { listDecks } from \"./../utils/api/index\";\nimport { deleteDeck } from \"./../utils/api/index\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DeckDisplay = ({\n  decks,\n  setDecks\n}) => {\n  _s();\n\n  useEffect(() => {\n    listDecks().then(setDecks);\n  }, [setDecks]);\n\n  async function deleteHandler(id) {\n    const deleteAlert = window.confirm(\"You will not be able to recover the deck!\");\n\n    if (deleteAlert) {\n      deleteDeck(id);\n      window.location.reload();\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: decks.map((deck, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"card\",\n      style: {\n        width: \"50rem\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          class: \"card-title\",\n          children: [deck.name, \" \", /*#__PURE__*/_jsxDEV(\"text\", {\n            class: \"text-success\",\n            children: [\"(\", /*#__PURE__*/_jsxDEV(\"b\", {\n              class: \"text-primary\",\n              children: deck.cards.length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 18\n            }, this), \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          class: \"card-text\",\n          children: deck.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `decks/${deck.id}`,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            class: \"btn btn-secondary\",\n            children: \"View\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `decks/${deck.id}/study`,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            class: \"btn btn-primary\",\n            children: \"Study\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          class: \"btn btn-danger\",\n          onClick: () => deleteHandler(deck.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DeckDisplay, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = DeckDisplay;\nexport default DeckDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeckDisplay\");","map":{"version":3,"sources":["C:/Users/gambl/Thinkful/qualified-assignments/Project_Flashcards_Qualified_1/src/Layout/DeckDisplay.js"],"names":["React","useEffect","listDecks","deleteDeck","Link","DeckDisplay","decks","setDecks","then","deleteHandler","id","deleteAlert","window","confirm","location","reload","map","deck","index","width","name","cards","length","description"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,QAA0B,sBAA1B;AACA,SAASC,UAAT,QAA2B,sBAA3B;AACA,SAASC,IAAT,QAAqB,kBAArB;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAyB;AAAA;;AAC3CN,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,SAAS,GAAGM,IAAZ,CAAiBD,QAAjB;AACD,GAFQ,EAEN,CAACA,QAAD,CAFM,CAAT;;AAIA,iBAAeE,aAAf,CAA6BC,EAA7B,EAAiC;AAC/B,UAAMC,WAAW,GAAGC,MAAM,CAACC,OAAP,CAClB,2CADkB,CAApB;;AAGA,QAAIF,WAAJ,EAAiB;AACfR,MAAAA,UAAU,CAACO,EAAD,CAAV;AACAE,MAAAA,MAAM,CAACE,QAAP,CAAgBC,MAAhB;AACD;AACF;;AAED,sBACE;AAAA,cACGT,KAAK,CAACU,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,kBACT;AAAK,MAAA,KAAK,EAAC,MAAX;AAA8B,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAArC;AAAA,6BACE;AAAK,QAAA,KAAK,EAAC,WAAX;AAAA,gCACE;AAAI,UAAA,KAAK,EAAC,YAAV;AAAA,qBACGF,IAAI,CAACG,IADR,EACc,GADd,eAEE;AAAM,YAAA,KAAK,EAAC,cAAZ;AAAA,yCACG;AAAG,cAAA,KAAK,EAAC,cAAT;AAAA,wBAAyBH,IAAI,CAACI,KAAL,CAAWC;AAApC;AAAA;AAAA;AAAA;AAAA,oBADH;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE;AAAG,UAAA,KAAK,EAAC,WAAT;AAAA,oBAAsBL,IAAI,CAACM;AAA3B;AAAA;AAAA;AAAA;AAAA,gBAPF,eAQE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAG,SAAQN,IAAI,CAACP,EAAG,EAA3B;AAAA,kCACE;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,KAAK,EAAC,mBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAGY,GAHZ;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF,eAaE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAG,SAAQO,IAAI,CAACP,EAAG,QAA3B;AAAA,kCACE;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,KAAK,EAAC,iBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAGY,GAHZ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbF,eAkBE;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,KAAK,EAAC,gBAFR;AAGE,UAAA,OAAO,EAAE,MAAMD,aAAa,CAACQ,IAAI,CAACP,EAAN,CAH9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,OAAuBQ,KAAvB;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAkCD,CAjDD;;GAAMb,W;;KAAAA,W;AAmDN,eAAeA,WAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { listDecks } from \"./../utils/api/index\";\r\nimport { deleteDeck } from \"./../utils/api/index\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst DeckDisplay = ({ decks, setDecks }) => {\r\n  useEffect(() => {\r\n    listDecks().then(setDecks);\r\n  }, [setDecks]);\r\n\r\n  async function deleteHandler(id) {\r\n    const deleteAlert = window.confirm(\r\n      \"You will not be able to recover the deck!\"\r\n    );\r\n    if (deleteAlert) {\r\n      deleteDeck(id);\r\n      window.location.reload();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {decks.map((deck, index) => (\r\n        <div class=\"card\" key={index} style={{ width: \"50rem\" }}>\r\n          <div class=\"card-body\">\r\n            <h5 class=\"card-title\">\r\n              {deck.name}{\" \"}\r\n              <text class=\"text-success\">\r\n                (<b class=\"text-primary\">{deck.cards.length}</b>)\r\n              </text>\r\n            </h5>\r\n            <p class=\"card-text\">{deck.description}</p>\r\n            <Link to={`decks/${deck.id}`}>\r\n              <button type=\"button\" class=\"btn btn-secondary\">\r\n                View\r\n              </button>{\" \"}\r\n            </Link>\r\n            <Link to={`decks/${deck.id}/study`}>\r\n              <button type=\"button\" class=\"btn btn-primary\">\r\n                Study\r\n              </button>{\" \"}\r\n            </Link>\r\n            <button\r\n              type=\"button\"\r\n              class=\"btn btn-danger\"\r\n              onClick={() => deleteHandler(deck.id)}\r\n            >\r\n              Delete\r\n            </button>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeckDisplay;\r\n"]},"metadata":{},"sourceType":"module"}