{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gambl\\\\Thinkful\\\\qualified-assignments\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\StudyCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst StudyCard = ({\n  deckCards,\n  deckId\n}) => {\n  _s();\n\n  const [isActive, setIsActive] = useState(false);\n  const [cardIndex, setCardIndex] = useState(0);\n  let history = useHistory();\n\n  const clickHandler = () => {\n    setIsActive(!isActive);\n  };\n\n  const lessThanThree = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Not enough cards\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"You need at least 3 cards to study. There are only\", \" \", /*#__PURE__*/_jsxDEV(\"code\", {\n        children: deckCards.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), \" cards in this deck.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: `/decks/${deckId}/cards/new`,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        children: \"+ Add Cards\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n\n  function windowAlert() {\n    const restartAlert = window.confirm(\"Restart cards? Click cancel to return to the home page\");\n\n    if (restartAlert) {\n      setCardIndex(0);\n    } else {\n      history.push(\"/\");\n    }\n  }\n\n  function nextButtonHandler() {\n    setIsActive(!isActive);\n    setCardIndex(cardIndex + 1);\n\n    if (cardIndex + 1 === deckCards.length) {\n      windowAlert();\n    }\n  }\n\n  const deckCardsMapped = deckCards.map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"card\",\n      style: \"width: 32rem;\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          class: \"card-title\",\n          children: \"Card title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          class: \"card-text\",\n          children: \"Some quick example text to build on the card title and make up the bulk of the card's content.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          class: \"btn btn-primary\",\n          children: \"Go somewhere\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: deckCards.length < 3 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: lessThanThree\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: deckCardsMapped[cardIndex]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n\n_s(StudyCard, \"+0OorweaVleB1qBXvDR6bNj5ipY=\", false, function () {\n  return [useHistory];\n});\n\n_c = StudyCard;\nexport default StudyCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"StudyCard\");","map":{"version":3,"sources":["C:/Users/gambl/Thinkful/qualified-assignments/Project_Flashcards_Qualified_1/src/Layout/StudyCard.js"],"names":["React","useState","Card","Button","Link","useHistory","StudyCard","deckCards","deckId","isActive","setIsActive","cardIndex","setCardIndex","history","clickHandler","lessThanThree","length","windowAlert","restartAlert","window","confirm","push","nextButtonHandler","deckCardsMapped","map","card","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAA2B;AAAA;;AAC3C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,CAAD,CAA1C;AACA,MAAIY,OAAO,GAAGR,UAAU,EAAxB;;AAEA,QAAMS,YAAY,GAAG,MAAM;AACzBJ,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACD,GAFD;;AAIA,QAAMM,aAAa,gBACjB;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,uEACqD,GADrD,eAEE;AAAA,kBAAOR,SAAS,CAACS;AAAjB;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAME,QAAC,IAAD;AAAM,MAAA,EAAE,EAAG,UAASR,MAAO,YAA3B;AAAA,6BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AAaA,WAASS,WAAT,GAAuB;AACrB,UAAMC,YAAY,GAAGC,MAAM,CAACC,OAAP,CACnB,wDADmB,CAArB;;AAGA,QAAIF,YAAJ,EAAkB;AAChBN,MAAAA,YAAY,CAAC,CAAD,CAAZ;AACD,KAFD,MAEO;AACLC,MAAAA,OAAO,CAACQ,IAAR,CAAa,GAAb;AACD;AACF;;AAED,WAASC,iBAAT,GAA6B;AAC3BZ,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACAG,IAAAA,YAAY,CAACD,SAAS,GAAG,CAAb,CAAZ;;AACA,QAAIA,SAAS,GAAG,CAAZ,KAAkBJ,SAAS,CAACS,MAAhC,EAAwC;AACtCC,MAAAA,WAAW;AACZ;AACF;;AAED,QAAMM,eAAe,GAAGhB,SAAS,CAACiB,GAAV,CAAc,CAACC,IAAD,EAAOC,KAAP,kBACpC;AAAA,2BACE;AAAK,MAAA,KAAK,EAAC,MAAX;AAA8B,MAAA,KAAK,EAAC,eAApC;AAAA,6BACE;AAAK,QAAA,KAAK,EAAC,WAAX;AAAA,gCACE;AAAI,UAAA,KAAK,EAAC,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAG,UAAA,KAAK,EAAC,WAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAME;AAAG,UAAA,IAAI,EAAC,GAAR;AAAY,UAAA,KAAK,EAAC,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,OAAuBA,KAAvB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADsB,CAAxB;AAmCA,sBACE;AAAA,cACGnB,SAAS,CAACS,MAAV,GAAmB,CAAnB,gBACC;AAAA,gBAAID;AAAJ;AAAA;AAAA;AAAA;AAAA,YADD,gBAGC;AAAA,gBAAMQ,eAAe,CAACZ,SAAD;AAArB;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CArFD;;GAAML,S;UAGUD,U;;;KAHVC,S;AAsFN,eAAeA,SAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nconst StudyCard = ({ deckCards, deckId }) => {\r\n  const [isActive, setIsActive] = useState(false);\r\n  const [cardIndex, setCardIndex] = useState(0);\r\n  let history = useHistory();\r\n\r\n  const clickHandler = () => {\r\n    setIsActive(!isActive);\r\n  };\r\n\r\n  const lessThanThree = (\r\n    <div>\r\n      <h2>Not enough cards</h2>\r\n      <p>\r\n        You need at least 3 cards to study. There are only{\" \"}\r\n        <code>{deckCards.length}</code> cards in this deck.\r\n      </p>\r\n      <Link to={`/decks/${deckId}/cards/new`}>\r\n        <Button>+ Add Cards</Button>\r\n      </Link>\r\n    </div>\r\n  );\r\n\r\n  function windowAlert() {\r\n    const restartAlert = window.confirm(\r\n      \"Restart cards? Click cancel to return to the home page\"\r\n    );\r\n    if (restartAlert) {\r\n      setCardIndex(0);\r\n    } else {\r\n      history.push(\"/\");\r\n    }\r\n  }\r\n\r\n  function nextButtonHandler() {\r\n    setIsActive(!isActive);\r\n    setCardIndex(cardIndex + 1);\r\n    if (cardIndex + 1 === deckCards.length) {\r\n      windowAlert();\r\n    }\r\n  }\r\n\r\n  const deckCardsMapped = deckCards.map((card, index) => (\r\n    <div>\r\n      <div class=\"card\" key={index} style=\"width: 32rem;\">\r\n        <div class=\"card-body\">\r\n          <h5 class=\"card-title\">Card title</h5>\r\n          <p class=\"card-text\">\r\n            Some quick example text to build on the card title and make up the\r\n            bulk of the card's content.\r\n          </p>\r\n          <a href=\"#\" class=\"btn btn-primary\">\r\n            Go somewhere\r\n          </a>\r\n        </div>\r\n      </div>\r\n      {/* <Card key={index} style={{ width: \"32rem\" }}>\r\n        <Card.Body>\r\n          <Card.Title>\r\n            Card <code>{index + 1}</code> of <code>{deckCards.length}</code>\r\n          </Card.Title>\r\n          <Card.Text>{isActive ? card.back : card.front}</Card.Text>\r\n          <Button variant=\"primary\" onClick={clickHandler}>\r\n            Flip\r\n          </Button>\r\n          <Button\r\n            style={isActive ? { display: \"inline\" } : { display: \"none\" }}\r\n            variant=\"secondary\"\r\n            onClick={nextButtonHandler}\r\n          >\r\n            Next\r\n          </Button>\r\n        </Card.Body>\r\n      </Card> */}\r\n    </div>\r\n  ));\r\n\r\n  return (\r\n    <div>\r\n      {deckCards.length < 3 ? (\r\n        <p>{lessThanThree}</p>\r\n      ) : (\r\n        <div>{deckCardsMapped[cardIndex]}</div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default StudyCard;\r\n"]},"metadata":{},"sourceType":"module"}